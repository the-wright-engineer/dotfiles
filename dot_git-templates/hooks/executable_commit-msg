#!/usr/bin/env python3

import re
import subprocess
import sys

# Collect the parameters
COMMIT_MSG_FILEPATH = sys.argv[1]
if len(sys.argv) > 2:
    COMMIT_TYPE = sys.argv[2]
else:
    COMMIT_TYPE = ""
if len(sys.argv) > 3:
    COMMIT_HASH = sys.argv[3]
else:
    COMMIT_HASH = ""

print(
    f"prepare-commit-msg: File: {COMMIT_MSG_FILEPATH}\nType: {COMMIT_TYPE}\nHash: {COMMIT_HASH}"
)

# Figure out which branch we're on
try:
    output = subprocess.check_output(["git", "symbolic-ref", "--short", "HEAD"])
    branch = output.strip()
except subprocess.CalledProcessError as e:
    sys.exit(0)

# Extract Jira ticket details from the branch name
ticket = re.search(r".*[A-Z]\d]+\-\d+.*", branch.decode("utf-8"))

if ticket is None:
    print("commit-msg: unable to extract Jira ticket from branch name.")
else:
    required_message = f"{ticket.group()}"
    with open(COMMIT_MSG_FILEPATH, "r", encoding="utf-8") as f:
        content = f.read()
        if content.startswith(required_message) or content.startswith(
            f"[{required_message}]"
        ):
            print("commit-msg: committing.")
        else:
            print(
                f"commit-msg: ERROR! The commit msg \
                        must start with '{required_message}'"
            )
            sys.exit(1)
